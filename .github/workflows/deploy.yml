name: Template Deploy on Azure Container Apps

on:
  push:
    branches:
      - dev

env:
  CLIENT_ID: ${{ secrets.CLIENT_ID }}
  TENANT_ID: ${{ secrets.TENANT_ID }}
  SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
permissions:
  id-token: write
  contents: read
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: $CLIENT_ID
          tenant-id: $TENANT_ID
          subscription-id: $SUBSCRIPTION_ID
      
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build -t $ACR_NAME.azurecr.io/$IMAGE_NAME:${{ github.sha }} .
          docker tag $ACR_NAME.azurecr.io/$IMAGE_NAME:${{ github.sha }} $ACR_NAME.azurecr.io/$IMAGE_NAME:latest

      - name: Login to ACR
        run: |
          az acr login --name $ACR_NAME

      - name: Push Docker image to ACR
        run: |
          docker push $ACR_NAME.azurecr.io/$IMAGE_NAME:${{ github.sha }}
          docker push $ACR_NAME.azurecr.io/$IMAGE_NAME:latest

      - name: Deploy to Azure Container Apps (dev)
        env:
            ACR_NAME: azure-container-registry-name
            IMAGE_NAME: docker-image-name
            CONTAINER_APP_NAME: container-app-name
            RESOURCE_GROUP: project-portfolio-resource
            BASE_APPLICATION_URL: https://example-name.norwayeast.azurecontainerapps.io
            TENANT_NAME: digdir.no
            DRIVER: ODBC Driver 18 for SQL Server
            DATABASE: database-name
            SCHEMA: ""
            STORAGE_SECRET: ${{ secrets.STORAGE_SECRET }}
            SERVER: ${{ secrets.SERVER }}
            FABRIC_CLIENT_ID: ${{ secrets.FABRIC_CLIENT_ID }}
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az account set --subscription $SUBSCRIPTION_ID
            az containerapp update \
              --name $CONTAINER_APP_NAME \
              --resource-group $RESOURCE_GROUP \
              --image $ACR_NAME.azurecr.io/$IMAGE_NAME:${{ github.sha }} \
              --revision-suffix "build-${{ github.run_number }}" \
              --set-env-vars \
                BASE_APPLICATION_URL=${BASE_APPLICATION_URL} \
                SCHEMA=${SCHEMA} \
                TENANT_NAME=${TENANT_NAME} \
                DRIVER="${DRIVER}" \
                DATABASE=${DATABASE} \
                STORAGE_SECRET=$STORAGE_SECRET \
                SERVER=$SERVER \
                CLIENT_ID=$CLIENT_ID \
                FABRIC_CLIENT_ID=$FABRIC_CLIENT_ID\
                TENANT_ID=$TENANT_ID \
              --cpu 1 \
              --memory 2Gi
